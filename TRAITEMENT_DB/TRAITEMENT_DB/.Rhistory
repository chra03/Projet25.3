feuilles <- c("Janvier", "Février", "Mars", "Avril", "Mai", "Juin",
"Septembre", "Octobre", "Novembre", "Décembre")
# Création d'une liste pour stocker les données
liste_data <- list()
# Boucle pour lire chaque feuille et ajouter la ligne "ENSEMBLE"
for (feu in feuilles) {
temp_data <- read_excel(paste0(wba, "WE 1€ 2023 Modifié.xlsx"), sheet = feu) %>%
mutate(MOIS = feu, MILLESIME = "2023")  # Ajout des colonnes
# Création de la ligne "ENSEMBLE"
total_ligne <- temp_data %>%
summarise(
Parcours = "ENSEMBLE",
Départ = "ENSEMBLE",
Arrivée = "ENSEMBLE",
`Nombre de voyages` = sum(`Nombre de voyages`, na.rm = TRUE),
`Poids de voyages` = sum(`Poids de voyages`, na.rm = TRUE),
`Nombre d'abonnements` = sum(`Nombre d'abonnements`, na.rm = TRUE),
MOIS = feu,
MILLESIME = "2023"
)
# Ajouter la ligne au tableau
temp_data <- bind_rows(temp_data, total_ligne)
# Stocker le résultat dans la liste
liste_data[[feu]] <- temp_data
}
# Empiler toutes les données en un seul data frame
data_finale <- bind_rows(liste_data)
View(data_finale)
# Liste des feuilles à importer
feuilles <- c("Janvier", "Février", "Mars", "Avril", "Mai", "Juin",
"Septembre", "Octobre", "Novembre", "Décembre")
# Création d'une liste pour stocker les données
liste_data <- list()
# Boucle pour lire chaque feuille et ajouter les colonnes
for (feu in feuilles) {
temp_data <- read_excel(paste0(wba, "WE 1€ 2023 Modifié.xlsx"), sheet = feu) %>%
mutate(MOIS = feu, MILLESIME = "2023")  # Ajout des colonnes
liste_data[[feu]] <- temp_data  # Stockage dans la liste
}
# Empiler toutes les données en un seul data frame
data_finale <- bind_rows(liste_data)
# Vérification du résultat
print(data_finale)
View(data_finale)
# Liste des feuilles à importer
feuilles <- c("Janvier", "Février", "Mars", "Avril", "Mai", "Juin",
"Septembre", "Octobre", "Novembre", "Décembre")
# Création d'une liste pour stocker les données
liste_data <- list()
# Boucle pour lire chaque feuille et ajouter les colonnes
for (feu in feuilles) {
temp_data <- read_excel(paste0(wba, "WE 1€ 2023 Modifié.xlsx"), sheet = feu) %>%
mutate(MOIS = feu, MILLESIME = "2023")  # Ajout des colonnes
liste_data[[feu]] <- temp_data  # Stockage dans la liste
}
# Empiler toutes les données en un seul data frame
data_finale23 <- bind_rows(liste_data)
names(data_finale23)
data_finale23 <- bind_rows(liste_data) %>%
filetr(!str_detect(Parcours , c("Filtres")))
data_finale23 <- bind_rows(liste_data) %>%
filter(!str_detect(Parcours , c("Filtres")))
data_finale23 <- bind_rows(liste_data) %>%
filter(!str_detect(Parcours = "Filtres"))
data_finale23 <- bind_rows(liste_data) %>%
filter(!str_detect(Parcours, "Filtres"), !is.na(Parcours))
View(data_finale23)
# Création d'une liste pour stocker les données
liste_data <- list()
# Boucle pour lire chaque feuille et ajouter les colonnes
for (feu in feuilles) {
temp_data <- read_excel(paste0(wba, "WE 1€ 2024modif.xlsx"), sheet = feu) %>%
mutate(MOIS = feu, MILLESIME = "2024")  # Ajout des colonnes
liste_data[[feu]] <- temp_data  # Stockage dans la liste
}
# Empiler toutes les données en un seul data frame
data_finale24 <- bind_rows(liste_data) %>%
filter(!str_detect(Parcours, "Filtres"), !is.na(Parcours))
View(data_finale24)
data_finale <- bind_rows(data_finale23, data_finale23)
data_finale1E <- bind_rows(data_finale23, data_finale23)
View(data_finale1E)
data_finale1E$Parcours <- str_replace_all(data_finale1E$Parcours, c("Total" = "ENSEMBLE DES PARCOURS"))
data_finale1E$Départ <- str_replace_all(data_finale1E$Départ, c("Total" = "ENSEMBLE DES PARCOURS"))
data_finale1E$Arrivée <- str_replace_all(data_finale1E$Arrivée, c("NA" = "ENSEMBLE DES PARCOURS"))
data_finale1E$Arrivée[is.na(data_finale1E$Arrivée)] <- "ENSEMBLE DES PARCOURS"
write.csv2(data_finale1E, paste0(wso, "DATA_TEMPO_1E.csv"), fileEncoding = "latin1", row.names = F)
runApp('1_import.R')
unique(data_finale1E$MILLESIME)
# Liste des feuilles à importer
feuilles <- c("Janvier", "Février", "Mars", "Avril", "Mai", "Juin",
"Septembre", "Octobre", "Novembre", "Décembre")
# Création d'une liste pour stocker les données
liste_data <- list()
# Boucle pour lire chaque feuille et ajouter les colonnes
for (feu in feuilles) {
temp_data <- read_excel(paste0(wba, "WE 1€ 2023 Modifié.xlsx"), sheet = feu) %>%
mutate(MOIS = feu, MILLESIME = "2023")  # Ajout des colonnes
liste_data[[feu]] <- temp_data  # Stockage dans la liste
}
# Empiler toutes les données en un seul data frame
data_finale23 <- bind_rows(liste_data) %>%
filter(!str_detect(Parcours, "Filtres"), !is.na(Parcours))
# Création d'une liste pour stocker les données
liste_data <- list()
# Boucle pour lire chaque feuille et ajouter les colonnes
for (feu in feuilles) {
temp_data <- read_excel(paste0(wba, "WE 1€ 2024modif.xlsx"), sheet = feu) %>%
mutate(MOIS = feu, MILLESIME = "2024")  # Ajout des colonnes
liste_data[[feu]] <- temp_data  # Stockage dans la liste
}
# Empiler toutes les données en un seul data frame
data_finale24 <- bind_rows(liste_data) %>%
filter(!str_detect(Parcours, "Filtres"), !is.na(Parcours))
data_finale1E <- bind_rows(data_finale23, data_finale23)
unique(data_finale1E$MILLESIME)
liste_data <- list()
# Boucle pour lire chaque feuille et ajouter les colonnes
for (feu in feuilles) {
temp_data <- read_excel(paste0(wba, "WE 1€ 2024modif.xlsx"), sheet = feu) %>%
mutate(MOIS = feu, MILLESIME = "2024")  # Ajout des colonnes
liste_data[[feu]] <- temp_data  # Stockage dans la liste
}
# Empiler toutes les données en un seul data frame
data_finale24 <- bind_rows(liste_data) %>%
filter(!str_detect(Parcours, "Filtres"), !is.na(Parcours))
View(data_finale24)
data_finale1E <- bind_rows(data_finale23, data_finale24)
data_finale1E$Parcours <- str_replace_all(data_finale1E$Parcours, c("Total" = "ENSEMBLE DES PARCOURS"))
data_finale1E$Départ <- str_replace_all(data_finale1E$Départ, c("Total" = "ENSEMBLE DES PARCOURS"))
data_finale1E$Arrivée[is.na(data_finale1E$Arrivée)] <- "ENSEMBLE DES PARCOURS"
unique(data_finale1E$MILLESIME)
write.csv2(data_finale1E, paste0(wso, "DATA_TEMPO_1E.csv"), fileEncoding = "latin1", row.names = F)
source("library.R")
wba <- "BASES/"
wso <- "SORTIE/"
# Liste des feuilles à importer
feuilles <- c("Janvier", "Février", "Mars", "Avril", "Mai", "Juin",
"Septembre", "Octobre", "Novembre", "Décembre")
#Pour l'annéee 2023
# Création d'une liste pour stocker les données
liste_data <- list()
# Boucle pour lire chaque feuille et ajouter les colonnes
for (feu in feuilles) {
temp_data <- read_excel(paste0(wba, "WE 1€ 2023.xlsx"), sheet = feu) %>%
mutate(MOIS = feu, MILLESIME = "2023")  # Ajout des colonnes
liste_data[[feu]] <- temp_data  # Stockage dans la liste
}
# Empiler toutes les données en un seul data frame
data_finale23 <- bind_rows(liste_data) %>%
filter(!str_detect(Parcours, "Filtres"), !is.na(Parcours))
#Pour l'annéee 2024
# Création d'une liste pour stocker les données
liste_data <- list()
# Boucle pour lire chaque feuille et ajouter les colonnes
for (feu in feuilles) {
temp_data <- read_excel(paste0(wba, "WE 1€ 2024.xlsx"), sheet = feu) %>%
mutate(MOIS = feu, MILLESIME = "2024")  # Ajout des colonnes
liste_data[[feu]] <- temp_data  # Stockage dans la liste
}
# Empiler toutes les données en un seul data frame
data_finale24 <- bind_rows(liste_data) %>%
filter(!str_detect(Parcours, "Filtres"), !is.na(Parcours))
data_finale1E <- bind_rows(data_finale23, data_finale24)
data_finale1E$Parcours <- str_replace_all(data_finale1E$Parcours, c("Total" = "ENSEMBLE DES PARCOURS"))
data_finale1E$Départ <- str_replace_all(data_finale1E$Départ, c("Total" = "ENSEMBLE DES PARCOURS"))
# Liste des feuilles à importer
feuilles <- c("Janvier", "Février", "Mars", "Avril", "Mai", "Juin",
"Septembre", "Octobre", "Novembre", "Décembre")
#Pour l'annéee 2023
# Création d'une liste pour stocker les données
liste_data <- list()
# Boucle pour lire chaque feuille et ajouter les colonnes
for (feu in feuilles) {
temp_data <- read_excel(paste0(wba, "WE 1€ 2023.xlsx"), sheet = feu) %>%
mutate(MOIS = feu, MILLESIME = "2023")  # Ajout des colonnes
liste_data[[feu]] <- temp_data  # Stockage dans la liste
}
# Empiler toutes les données en un seul data frame
data_finale23 <- bind_rows(liste_data) %>%
filter(!str_detect(Parcours, "Filtres"), !is.na(Parcours))
#Pour l'annéee 2024
# Création d'une liste pour stocker les données
liste_data <- list()
# Boucle pour lire chaque feuille et ajouter les colonnes
for (feu in feuilles) {
temp_data <- read_excel(paste0(wba, "WE 1€ 2024.xlsx"), sheet = feu) %>%
mutate(MOIS = feu, MILLESIME = "2024")  # Ajout des colonnes
liste_data[[feu]] <- temp_data  # Stockage dans la liste
}
# Empiler toutes les données en un seul data frame
data_finale24 <- bind_rows(liste_data) %>%
filter(!str_detect(Parcours, "Filtres"), !is.na(Parcours))
data_finale1E_col <- bind_rows(data_finale23, data_finale24)
data_finale1E_col$Parcours <- str_replace_all(data_finale1E_col$Parcours, c("Total" = "ENSEMBLE DES PARCOURS"))
View(data_finale1E_col)
sepa_test <- data_finale1E_col %>%
separate(Parcours, into = c("Depart", "Arrivee","reste"), sep = " - ")
View(sepa_test)
write.csv2(sepa_test, paste0(wso, "sepa_test.csv"), fileEncoding = "latin1", row.names = F)
write_excel_csv2(sepa_test, paste0(wso, "sepa_test1.csv"), fileEncoding = "latin1", row.names = F)
write_excel_csv2(sepa_test, paste0(wso, "sepa_test1.csv"),  row.names = F)
write_excel_csv2(sepa_test, paste0(wso, "sepa_test1.csv"))
sepa_test <- data_finale1E_col %>%
separate(Parcours, into = c("Depart", "Arrivee","reste"), sep = " - ") %>%
filter(is.na(reste))
sepa_test <- data_finale1E_col %>%
separate(Parcours, into = c("Depart", "Arrivee","reste"), sep = " - ") %>%
filter(is.na(reste))%>%
filter(`Nombre de voyages` >= 50)
sepa_test <- data_finale1E_col %>%
separate(Parcours, into = c("Depart", "Arrivee","reste"), sep = " - ") %>%
filter(is.na(reste))%>%
filter(`Nombre de voyages` >= 50)%>%
select(-reste)
sepa_test <- data_finale1E_col %>%
separate(Parcours, into = c("Depart", "Arrivee","reste"), sep = " - ") %>%
filter(is.na(reste))%>%
filter(`Nombre de voyages` >= 50)%>%
dplyr :: select(-reste)
sepa_test <- data_finale1E_col %>%
separate(Parcours, into = c("Depart", "Arrivee","reste"), sep = " - ") %>%
filter(is.na(reste))%>%
filter(`Nombre de voyages` >= 100)%>%
dplyr :: select(-reste)
lis_gare <- read.csv2(paste0(wba, "tt_gare.csv"), fileEncoding = "latin1")
View(lis_gare)
lis_gare <- read.csv2(paste0(wba, "tt_gare.csv"),sep = "," ,fileEncoding = "latin1")
lis_gare <- read.csv2(paste0(wba, "tt_gare.csv"),sep = "," )
names(lis_gare)
lis_gare <- read.csv2(paste0(wba, "tt_gare.csv"),sep = "," ) %>%
select(Nom, Position.géographique)
lis_gare <- read.csv2(paste0(wba, "tt_gare.csv"),sep = "," ) %>%
dplyr :: select(Nom, Position.géographique)
jointure_dep <- sepa_test %>%
inner_join(lis_gare, by=c(Depart = Nom))
jointure_dep <- sepa_test %>%
inner_join(lis_gare, by=c(Nom = Depart))
jointure_dep <- sepa_test %>%
inner_join(lis_gare, by=c("Nom" = "Depart"))
jointure_dep <- sepa_test %>%
inner_join(lis_gare, by=c("Depart" = "Nom"))
View(jointure_dep)
jointure_dep <- sepa_test %>%
inner_join(lis_gare, by=c("Depart" = "Nom")) %>%
rename("Geom_depart" = "Position.géographique")
sepa_test <- data_finale1E_col %>%
mutate(Depart = sub(" - .*", "", Parcours),   # Récupère la partie avant " - "
Arrivee = sub(".* - ", "", Parcours))%>%
filter(is.na(reste))%>%
filter(`Nombre de voyages` >= 100)%>%
dplyr :: select(-reste)
sepa_test <- data_finale1E_col %>%
separate(Parcours, into = c("Depart", "Arrivee","reste"), sep = " - ") %>%
filter(is.na(reste))%>%
filter(`Nombre de voyages` >= 100)%>%
dplyr :: select(-reste)
sepa_test <- bind_cols(sepa_test, data_finale1E_col$Parcours)
sepa_test <- data_finale1E_col %>%
separate(Parcours, into = c("Depart", "Arrivee","reste"), sep = " - ")
sepa_test <- bind_cols(sepa_test, data_finale1E_col$Parcours)%>%
filter(is.na(reste))%>%
filter(`Nombre de voyages` >= 100)%>%
dplyr :: select(-reste)
sepa_test <- data_finale1E_col %>%
separate(Parcours, into = c("Depart", "Arrivee","reste"), sep = " - ")
sepa_test$Parcous <- data_finale1E_col$Parcours
sepa_test <- sepa_test%>%
filter(is.na(reste))%>%
filter(`Nombre de voyages` >= 100)%>%
dplyr :: select(-reste)
lis_gare <- read.csv2(paste0(wba, "tt_gare.csv"),sep = "," ) %>%
dplyr :: select(Nom, Position.géographique)
jointure_dep <- sepa_test %>%
inner_join(lis_gare, by=c("Depart" = "Nom")) %>%
rename("Geom_depart" = "Position.géographique")
jointure_arr <- jointure_dep %>%
inner_join(lis_gare, by=c("Arrivee" = "Nom")) %>%
rename("Geom_arrivee" = "Position.géographique")
View(jointure_arr)
names(jointure_finale)
names(jointure_finale)
names(jointure_finale)
names(jointure_arr)
jointure_finale <- jointure_arr %>%
mutate("NB_PERS" = `Nombre de voyages`)
View(jointure_finale)
jointure_finale <- jointure_arr %>%
rename("NB_PERS" = `Nombre de voyages`)
KGCOD_ter <- 0.0244
KGCOD_ter <- 0.0244
jointure_finale <- jointure_arr %>%
rename("NB_PERS" = `Nombre de voyages`)%>%
mutate(CO2_km_tot = NB_PERS*KGCOD_ter)
jointure_finale <- jointure_arr %>%
rename("NB_PERS" = `Nombre de voyages`)%>%
mutate(KCO2_km_tot = NB_PERS*KGCOD_ter)
jointure_finale <- jointure_arr %>%
rename("NB_PERS" = `Nombre de voyages`)%>%
mutate(KCO2_TER_km_tot = NB_PERS*KGCOD_ter)
jointure_finale <- jointure_arr %>%
rename("NB_PERS" = `Nombre de voyages`)%>%
mutate(KCO2_TER_km_tot = NB_PERS*KGCOD_ter)%>%
mutate(KCO2_Voit_km_tot = NB_PERS*KGCOD_voit)%>%
mutate(ECO_CO2_km_pers = KCO2_Voit_km_tot-KCO2_TER_km_tot)
KGCOD_voit <- 0.2
jointure_finale <- jointure_arr %>%
rename("NB_PERS" = `Nombre de voyages`)%>%
mutate(KCO2_TER_km_tot = NB_PERS*KGCOD_ter)%>%
mutate(KCO2_Voit_km_tot = NB_PERS*KGCOD_voit)%>%
mutate(ECO_CO2_km_pers = KCO2_Voit_km_tot-KCO2_TER_km_tot)
TAB_1E_POS <- jointure_arr %>%
rename("NB_PERS" = `Nombre de voyages`)%>%
mutate(KCO2_TER_km_tot = NB_PERS*KGCOD_ter)%>%
mutate(KCO2_Voit_km_tot = NB_PERS*KGCOD_voit)%>%
mutate(ECO_CO2_km_pers = KCO2_Voit_km_tot-KCO2_TER_km_tot)
write.csv2(TAB_1E_POS, paste0(wso, "TAB_1E_POS.csv"), fileEncoding = "latin1", row.names = F)
names(TAB_1E_POS)
runApp('~/Documents/DOSSIER PRO/R_SHINY/PROJET_CHIFFRES_CLES')
# Créer le graphique en camembert avec pourcentage
grapheCAM <- ggplot(data_separated, aes(x = "", y = Count, fill = Mode_de_transport)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
theme_void() +
labs(title = "Répartition des Transports en Milliards de Voyageurs-Km", fill = "Mode de transport") +
geom_text(aes(label = paste0(round(Percentage, 1), "%")), position = position_stack(vjust = 0.5))
library(ggplot2)
library(readr)
library(dplyr)
library(tidyr)
# Charger le fichier CSV
data <- read_csv("REPARTITION_TRANSPORTS.csv")
source("library.R")
wba <- "BASES/"
wso <- "SORTIE/"
transport <- read_excel(paste0(wba, "sect-trans-tiv-mode.xlsx"), skip = 3)
colnames(transport) <- make.names(colnames(transport))
col_mil <- c("X2012","X2013","X2014","X2015","X2016","X2017","X2018","X2019","X2020","X2021","X2022")
KGCOD_ter <- 0.0244
transport <- transport %>%
filter(!is.na(X2017))
transport2 <- transport %>%
filter(str_detect(Mode.de.transport, "particuliers|autocars|Transport" ))
data_repart_voy <- transport2 %>%
dplyr:: select(Mode.de.transport, X2022 )
write.csv2(data_repart_voy, paste0(wso, "REPARTITION_TRANSPORTS.csv"), fileEncoding = "latin1", row.names = F)
data_evo_fer <- transport2 %>%
filter(Mode.de.transport == "Transports ferrés3")%>%
pivot_longer(cols = col_mil, names_to = "MILLESIME", values_to = "VOY_KM")%>%
dplyr :: select(Mode.de.transport,MILLESIME,VOY_KM)
data_evo_fer$MILLESIME <- str_replace_all(data_evo_fer$MILLESIME, c("X" = ""))
write.csv2(data_evo_fer, paste0(wso, "EVO_FER.csv"), fileEncoding = "latin1", row.names = F)
data_form <- read.csv2(paste0(wba, "Marathon du web.csv"))
data_form2 <- data_form %>%
dplyr :: select(TOTAL, X2023, X2024) %>%
pivot_longer(cols = c("X2023", "X2024"), names_to = "MILLESIME", values_to = "NOMBRE")%>%
filter(TOTAL != "")
data_form2$TYPE <- ifelse(data_form2$TOTAL == "Jeunes", "Jeunes",
ifelse(data_form2$TOTAL == "Fréquents", "Fréquents",
ifelse(data_form2$TOTAL == "Occasionnels", "Occasionnels",
ifelse(data_form2$TOTAL == "+=", "+=",
ifelse(data_form2$TOTAL == "WE 1€", "WE 1€", NA)))))
source("library.R")
wba <- "BASES/"
wso <- "SORTIE/"
## Données pour la repartition des voyages selon le type de transport
transport <- read_excel(paste0(wba, "sect-trans-tiv-mode.xlsx"), skip = 3)
colnames(transport) <- make.names(colnames(transport))
col_mil <- c("X2012","X2013","X2014","X2015","X2016","X2017","X2018","X2019","X2020","X2021","X2022")
KGCOD_ter <- 0.0244
transport <- transport %>%
filter(!is.na(X2017))
transport2 <- transport %>%
filter(str_detect(Mode.de.transport, "particuliers|autocars|Transport" ))
data_repart_voy <- transport2 %>%
dplyr:: select(Mode.de.transport, X2022 )
write.csv2(data_repart_voy, paste0(wso, "REPARTITION_TRANSPORTS.csv"), fileEncoding = "latin1", row.names = F)
data_evo_fer <- transport2 %>%
filter(Mode.de.transport == "Transports ferrés3")%>%
pivot_longer(cols = col_mil, names_to = "MILLESIME", values_to = "VOY_KM")%>%
dplyr :: select(Mode.de.transport,MILLESIME,VOY_KM)
data_evo_fer$MILLESIME <- str_replace_all(data_evo_fer$MILLESIME, c("X" = ""))
write.csv2(data_evo_fer, paste0(wso, "EVO_FER.csv"), fileEncoding = "latin1", row.names = F)
data_form <- read.csv2(paste0(wba, "Marathon du web.csv"))
data_form2 <- data_form %>%
dplyr :: select(TOTAL, X2023, X2024) %>%
pivot_longer(cols = c("X2023", "X2024"), names_to = "MILLESIME", values_to = "NOMBRE")%>%
filter(TOTAL != "")
data_form2$TYPE <- ifelse(data_form2$TOTAL == "Jeunes", "Jeunes",
ifelse(data_form2$TOTAL == "Fréquents", "Fréquents",
ifelse(data_form2$TOTAL == "Occasionnels", "Occasionnels",
ifelse(data_form2$TOTAL == "+=", "+=",
ifelse(data_form2$TOTAL == "WE 1€", "WE 1€", NA)))))
View(data_form2)
View(data_form)
data_form <- read.csv2(paste0(wba, "Marathon du web.csv"))
data_form2 <- data_form %>%
dplyr :: select(TOTAL, X2023, X2024) %>%
pivot_longer(cols = c("X2023", "X2024"), names_to = "MILLESIME", values_to = "NOMBRE")%>%
filter(TOTAL != "")
data_form2$TYPE <- ifelse(data_form2$TOTAL == "Jeunes", "Jeunes",
ifelse(data_form2$TOTAL == "Fréquents", "Fréquents",
ifelse(data_form2$TOTAL == "Occasionnels", "Occasionnels",
ifelse(data_form2$TOTAL == "+=", "+=",
ifelse(data_form2$TOTAL == "WE 1€", "WE 1€", NA)))))
View(data_form2)
data_form3 <- data_form2 %>%
fill(TYPE, .direction = "down")%>%
mutate(TYPE = replace_na(TYPE, "Ensemble"))%>%
filter(!(TOTAL %in% c("Jeunes","Fréquents", "Occasionnels" , "+=", "WE 1€")))
View(data_form3)
source("library.R")
wba <- "BASES/"
wso <- "SORTIE/"
## Données pour la repartition des voyages selon le type de transport
transport <- read_excel(paste0(wba, "sect-trans-tiv-mode.xlsx"), skip = 3)
colnames(transport) <- make.names(colnames(transport))
col_mil <- c("X2012","X2013","X2014","X2015","X2016","X2017","X2018","X2019","X2020","X2021","X2022")
KGCOD_ter <- 0.0244
transport <- transport %>%
filter(!is.na(X2017))
transport2 <- transport %>%
filter(str_detect(Mode.de.transport, "particuliers|autocars|Transport" ))
data_repart_voy <- transport2 %>%
dplyr:: select(Mode.de.transport, X2022 )
write.csv2(data_repart_voy, paste0(wso, "REPARTITION_TRANSPORTS.csv"), fileEncoding = "latin1", row.names = F)
data_evo_fer <- transport2 %>%
filter(Mode.de.transport == "Transports ferrés3")%>%
pivot_longer(cols = col_mil, names_to = "MILLESIME", values_to = "VOY_KM")%>%
dplyr :: select(Mode.de.transport,MILLESIME,VOY_KM)
data_evo_fer$MILLESIME <- str_replace_all(data_evo_fer$MILLESIME, c("X" = ""))
write.csv2(data_evo_fer, paste0(wso, "EVO_FER.csv"), fileEncoding = "latin1", row.names = F)
data_form <- read.csv2(paste0(wba, "Marathon du web.csv"))
data_form2 <- data_form %>%
dplyr :: select(TOTAL, X2023, X2024) %>%
pivot_longer(cols = c("X2023", "X2024"), names_to = "MILLESIME", values_to = "NOMBRE")%>%
filter(TOTAL != "")
data_form2$TYPE <- ifelse(data_form2$TOTAL == "Jeunes", "Jeunes",
ifelse(data_form2$TOTAL == "Fréquents", "Fréquents",
ifelse(data_form2$TOTAL == "Occasionnels", "Occasionnels",
ifelse(data_form2$TOTAL == "+=", "+=",
ifelse(data_form2$TOTAL == "WE 1€", "WE 1€", NA)))))
data_form3 <- data_form2 %>%
fill(TYPE, .direction = "down")%>%
mutate(TYPE = replace_na(TYPE, "Ensemble"))%>%
filter(!(TOTAL %in% c("Jeunes","Fréquents", "Occasionnels" , "+=", "WE 1€")))
data_CO2 <- data_form3 %>%
filter(TOTAL== "Distance totale annuelle en km")
data_CO2$NOMBRE <- str_replace_all(data_CO2$NOMBRE, c(" " = ""))
data_CO2$NOMBRE <- as.numeric(data_CO2$NOMBRE)
data_CO2 <- data_CO2%>%
mutate(
NOMBRE = as.numeric(NOMBRE),
# KGCOD_ter = as.numeric(KGCOD_ter),
TONNNE_CO2_EMIS = ((NOMBRE * KGCOD_ter)/1000)
)
View(data_CO2)
data_CO2$TOTAL <- str_replace_all(data_CO2$TOTAL, c("X" = ""))
data_CO2$MILLESIE <- str_replace_all(data_CO2$MILLESIME, c("X" = ""))
data_CO2$MILLESIME <- str_replace_all(data_CO2$MILLESIME, c("X" = ""))
source("library.R")
wba <- "BASES/"
wso <- "SORTIE/"
## Données pour la repartition des voyages selon le type de transport
transport <- read_excel(paste0(wba, "sect-trans-tiv-mode.xlsx"), skip = 3)
colnames(transport) <- make.names(colnames(transport))
col_mil <- c("X2012","X2013","X2014","X2015","X2016","X2017","X2018","X2019","X2020","X2021","X2022")
KGCOD_ter <- 0.0244
transport <- transport %>%
filter(!is.na(X2017))
transport2 <- transport %>%
filter(str_detect(Mode.de.transport, "particuliers|autocars|Transport" ))
data_repart_voy <- transport2 %>%
dplyr:: select(Mode.de.transport, X2022 )
write.csv2(data_repart_voy, paste0(wso, "REPARTITION_TRANSPORTS.csv"), fileEncoding = "latin1", row.names = F)
data_evo_fer <- transport2 %>%
filter(Mode.de.transport == "Transports ferrés3")%>%
pivot_longer(cols = col_mil, names_to = "MILLESIME", values_to = "VOY_KM")%>%
dplyr :: select(Mode.de.transport,MILLESIME,VOY_KM)
data_evo_fer$MILLESIME <- str_replace_all(data_evo_fer$MILLESIME, c("X" = ""))
write.csv2(data_evo_fer, paste0(wso, "EVO_FER.csv"), fileEncoding = "latin1", row.names = F)
data_form <- read.csv2(paste0(wba, "Marathon du web.csv"))
data_form2 <- data_form %>%
dplyr :: select(TOTAL, X2023, X2024) %>%
pivot_longer(cols = c("X2023", "X2024"), names_to = "MILLESIME", values_to = "NOMBRE")%>%
filter(TOTAL != "")
data_form2$TYPE <- ifelse(data_form2$TOTAL == "Jeunes", "Jeunes",
ifelse(data_form2$TOTAL == "Fréquents", "Fréquents",
ifelse(data_form2$TOTAL == "Occasionnels", "Occasionnels",
ifelse(data_form2$TOTAL == "+=", "+=",
ifelse(data_form2$TOTAL == "WE 1€", "WE 1€", NA)))))
data_form3 <- data_form2 %>%
fill(TYPE, .direction = "down")%>%
mutate(TYPE = replace_na(TYPE, "Ensemble"))%>%
filter(!(TOTAL %in% c("Jeunes","Fréquents", "Occasionnels" , "+=", "WE 1€")))
data_CO2 <- data_form3 %>%
filter(TOTAL== "Distance totale annuelle en km")
data_CO2$NOMBRE <- str_replace_all(data_CO2$NOMBRE, c(" " = ""))
data_CO2$NOMBRE <- as.numeric(data_CO2$NOMBRE)
data_CO2 <- data_CO2%>%
mutate(
NOMBRE = as.numeric(NOMBRE),
# KGCOD_ter = as.numeric(KGCOD_ter),
TONNNE_CO2_EMIS = ((NOMBRE * KGCOD_ter)/1000)
)
data_CO2$MILLESIME <- str_replace_all(data_CO2$MILLESIME, c("X" = ""))
write.csv2(data_CO2, paste0(wso, "DATA_TONNE_CO2_LIO.csv"), row.names = F)
1543277526/56000
1543277526/80000
53*365
82000*365
82000*365*19000
